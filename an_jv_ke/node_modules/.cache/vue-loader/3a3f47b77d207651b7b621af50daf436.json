{"remainingRequest":"C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\src\\components\\QuanBu\\QuanBu02.vue?vue&type=template&id=4cb26851&scoped=true&","dependencies":[{"path":"C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\src\\components\\QuanBu\\QuanBu02.vue","mtime":1608033000961},{"path":"C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\web\\Desktop\\安居客-新房vue\\an_jv_ke\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}